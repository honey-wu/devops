apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 6.0.19
    prometheus: k8s
    role: alert-rules
  name: redis-prometheus-rules
  namespace: monitoring
spec:
  groups:
  - name: redis.rules
    rules:
    - alert: RedisDown
      expr: redis_up{job!="redis_exporter"} == 0
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Redis down (instance {{ $labels.instance }})
        description: "Redis instance is down\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisMissingMaster
      expr: (count(redis_instance_info{role="master"}) or vector(0)) < 1
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Redis missing master (instance {{ $labels.instance }})
        description: "Redis cluster has no node marked as master.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisTooManyMasters
      expr: count(redis_instance_info{role="master"}) > 3
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Redis too many masters (instance {{ $labels.instance }})
        description: "Redis cluster has too many nodes marked as master.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisDisconnectedSlaves
      expr: count without (instance, job) (redis_connected_slaves) - sum without (instance, job) (redis_connected_slaves) - 1 > 2
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Redis disconnected slaves (instance {{ $labels.instance }})
        description: "Redis disconnected slaves \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisReplicationBroken
      expr: delta(redis_connected_slaves[1m]) < 0
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Redis replication broken (instance {{ $labels.instance }})
        description: "Redis replication broken \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisClusterFlapping
      expr: changes(redis_connected_slaves[5m]) > 2
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Redis cluster flapping (instance {{ $labels.instance }})
        description: "Redis cluster flapping \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisMissingRdbBackup
      expr: time() - redis_rdb_last_save_timestamp_seconds > 60 * 60 * 24
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Redis missing rdb backup (instance {{ $labels.instance }})
        description: "Redis has not been backuped for rdb 24 hours\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisOutOfSystemMemory
      expr: redis_memory_used_bytes / redis_total_system_memory_bytes * 100 > 90
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Redis out of system memory (instance {{ $labels.instance }})
        description: "Redis is running out of system memory (> 90%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisOutOfConfiguredMaxmemory
      expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 80
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Redis out of configured maxmemory (instance {{ $labels.instance }})
        description: "Redis is running out of configured maxmemory (> 70%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisTooManyConnections
      expr: redis_connected_clients > 1000
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Redis too many connections (instance {{ $labels.instance }})
        description: "Redis instance has too many connections\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisNotEnoughConnections
      expr: redis_connected_clients < 5
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Redis not enough connections (instance {{ $labels.instance }})
        description: "Redis instance should have more connections (> 5)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RedisRejectedConnections
      expr: increase(redis_rejected_connections_total[1m]) > 0
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Redis rejected connections (instance {{ $labels.instance }})
        description: "Some connections to Redis has been rejected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
